[project]
name = "pyobsplot"
version = "0.4.3"
description = "Observable Plot in Jupyter notebooks and Quarto documents"
authors = [{ name = "Julien Barnier", email = "julien@nozav.org" }]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Jupyter :: JupyterLab",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: JavaScript",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "anywidget[dev]>=0.9.11",
    "pandas>=2.2.2",
    "polars>=0.20.29",
    "pyarrow>=16.1.0",
    "requests",
    "typst>=0.11.1",
]

[project.urls]
homepage = "https://github.com/juba/pyobsplot"
documentation = "https://juba.github.io/pyobsplot"
repository = "https://github.com/juba/pyobsplot"
changelog = "https://github.com/juba/pyobsplot/blob/main/NEWS.md"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.2.1",
    "geopandas>=0.14.4",
    "jupyterlab>=4.2.1",
    "ipykernel>=6.29.4",
    "playwright>=1.44.0",
]

[tool.rye.scripts]
test = "pytest"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".github", "doc", ".vscode", "examples"]

[tool.hatch.build.targets.wheel]
packages = ["src/pyobsplot"]

[tool.black]
target-version = ["py39"]
line-length = 88
skip-string-normalization = true

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "src"
filterwarnings = "ignore::DeprecationWarning"


[tool.ruff]
exclude = ["__pycache__", "__pypackages__", ".git"]
line-length = 88
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105",
    "S106",
    "S107",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "S301",
    "S113"
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.isort]
known-first-party = ["pyobsplot"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

